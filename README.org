# -*- org-link-file-path-type: relative; -*-
#+OPTIONS: toc:nil h:9
* ARCADE
The Advanced Research Collaboration and Application Development
Environment (ARCADE) is a collaboration project between the [[https://sites.utexas.edu/moriba/][ASTRIA
Research Group]] at the University of Texas at Austin, the IBM Space
Tech team, and other partners. The goal of this repository is to
provide a unified and coherent API for accessing, analyzing, and
extending a diverse set of derived data points concerning an
anthropogenic space object (ASO).  Note: this repository currently
represents a small proof of concept and is in a very alpha state of
development, so APIs (internal and external) may change greatly.
* System Architecture
[[file:docs/arcade_arch.png]]

The ARCADE platform ingests data from multiple raw and preprocessed
sources including telescopes, radar arrays, and TLE data from
different providers and fuses it into a coherent view of each
ASO. This data fusion is done in [[https://sites.utexas.edu/moriba/astriagraph/][ASTRIAGraph]] with the data being
stored in the graph database or IBM's [[https://www.ibm.com/products/cloud-object-storage][cloud object storage (COS)]]
depending on the data type. A RESTful API is then used to provide
access to this rich data to developers and client applications.
* API
Interactive documentation for the API where you can try it out in a
web browser is available [[https://arcade.spacetech-ibm.com/docs][here]].  The currently provided endpoints that
you can programmatically test via the base URI
https://arcade.spacetech-ibm.com are:

| Endpoint     | Description                                                                                                    |
|--------------+----------------------------------------------------------------------------------------------------------------|
| /asos        | Returns basic information on all the ASOs that ARCADE knows about like its name and various identifiers        |
| /aso         | Returns the basic information for a single ASO                                                                 |
| /ephemeris   | Provides the most up-to-date ephemeris data for an ASO                                                         |
| /interpolate | Uses UT's [[https://github.com/ut-astria/orbdetpy][=orbdetpy= library]] to interpolate the ephemeris data for the ASO to the specified temporal frequency |
| /compliance  | Returns whether or not the ASO is compliant in registering with UNOSSA                                         |

* Demo Client Applications
** Conjunction Search
The [[https://spaceorbits.net][conjunction search demo]] of the [[https://github.com/ibm/spacetech-ssa][space situational awareness]] project
now uses the =/ephemeris= ARCADE API endpoint to gather the up-to-date
orbit state vector data and then determine the nearest conjunctions of each
satellite.
[[file:docs/conj.png]]
** Observatory Light Pollution
[[https://www.oden.utexas.edu/people/1610/][Daniel Kucharski]] of the University of Texas at Austin has developed a
[[https://github.com/danielkucharski/SatLightPollution][C++ library]] for determining how much light pollution a terrestrial
based astronomical observatory will experience over a given time
period due to ASOs passing overhead. [[https://slp.spacetech-ibm.com][This demo]] utilizes ARCADE's
=/interpolate= endpoint and the satellite light pollution library to
show the brightness of ASOs currently above the New Mexico skys.
Redder objects are brighter while bluer objects are more dim.
[[file:docs/slp.png]]
** UNOSSA Compliance
In [[https://astriagraph.spacetech-ibm.com][this demo]] we combine [[http://astria.tacc.utexas.edu/AstriaGraph/][ASTRIAGraph]] and the =\compliance= ARCADE
endpoint to show what ASOs are in compliance with UNOSSA's
registration requirements.
[[file:docs/astriagraph.png]]
* Development and Extending the ARCADE API
The ARCADE PoC is developed using Python 3.8 with the [[https://fastapi.tiangolo.com][FastAPI]]
framework. We utilize [[https://www.docker.com][docker]] to develop, test, and deploy the API. The
PoC API and all of the demos mentioned [[*Demo Client Applications][above]] are deployed on [[https://www.openshift.com][Red Hat's
OpenShift platform]] on [[https://www.ibm.com/cloud][IBM Cloud]]. A [[file:Makefile][makefile]] is provided to run most of
the common development tasks like:

| Command           | Description                                   |
|-------------------+-----------------------------------------------|
| =make build=      | Builds a docker image                         |
| =make clean=      | Removes all built docker images               |
| =make type_check= | Uses [[https://mypy.readthedocs.io/en/stable/][mypy]] to type check the code base         |
| =make test=       | Runs the test suite                           |
| =make run=        | Runs the API locally at [[http://localhost:8000]] |

The ARCADE project is meant to be extended by allowing community
members to add new data sources, algorithms, and API endpoints.
** Adding Data
*** Graph Database
The ARCADE PoC utilizes the [[https://neo4j.com][neo4j]] graph database as the operational
data store.  The current schema has the following entity-relationship diagram.
[[file:docs/arcade_graph2.png]]
The =SpaceObject= node type is used to store data about an ASO that
does frequently change like various catalog IDs and the object's
name. 
We use the [[https://neomodel.readthedocs.io/en/latest/][neomodel]] object graph mapper (OGM) in the [[file:arcade/models/graph.py][=graph=]]
*** Data Importers
** Adding New Algorithms and API Models
** Adding API Endpoints
* Contributing
We very much encourage anyone and everyone to join and contribute to
this project. Please see the [[file:///Users/colin/projects/arcade/CONTRIBUTING.md][contributing file]] for more details.

* License
ARCADE is licensed under the Apache 2.0 license. Full license text is
available at [[file:///Users/colin/projects/arcade/LICENSE][LICENSE]].
